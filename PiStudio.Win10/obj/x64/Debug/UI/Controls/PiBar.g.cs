#pragma checksum "C:\Users\Jakub Lichman\Source\Repos\Bachelor-Thesis\PiStudio.Win10\UI\Controls\PiBar.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "39F32F4AE77D4E21B7F8927462CF3548"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PiStudio.Win10.UI.Controls
{
    partial class PiBar : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_Panel_Background(global::Windows.UI.Xaml.Controls.Panel obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Background = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_Background(global::Windows.UI.Xaml.Controls.Control obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Background = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_Height(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Double value)
            {
                obj.Height = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_Width(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Double value)
            {
                obj.Width = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_Foreground(global::Windows.UI.Xaml.Controls.Control obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Foreground = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_AutoSuggestBox_PlaceholderText(global::Windows.UI.Xaml.Controls.AutoSuggestBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.PlaceholderText = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_BorderBrush(global::Windows.UI.Xaml.Controls.Control obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.BorderBrush = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Foreground(global::Windows.UI.Xaml.Controls.TextBlock obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Foreground = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_IconElement_Foreground(global::Windows.UI.Xaml.Controls.IconElement obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Foreground = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_SymbolIcon_Symbol(global::Windows.UI.Xaml.Controls.SymbolIcon obj, global::Windows.UI.Xaml.Controls.Symbol value)
            {
                obj.Symbol = value;
            }
        };

        private class PiBar_obj7_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IPiBar_Bindings
        {
            private global::PiStudio.Win10.Data.SearchOption dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj8;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj9;

            private PiBar_obj7_BindingsTracking bindingsTracking;

            public PiBar_obj7_Bindings()
            {
                this.bindingsTracking = new PiBar_obj7_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 8:
                        this.obj8 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 9:
                        this.obj9 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::PiStudio.Win10.Data.SearchOption data = args.NewValue as global::PiStudio.Win10.Data.SearchOption;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::PiStudio.Win10.Data.SearchOption was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::PiStudio.Win10.Data.SearchOption);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.Grid)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::PiStudio.Win10.Data.SearchOption) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IPiBar_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // PiBar_obj7_Bindings

            public void SetDataRoot(global::PiStudio.Win10.Data.SearchOption newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::PiStudio.Win10.Data.SearchOption obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ApplicationTheme(obj.ApplicationTheme, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Text(obj.Text, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Symbol(obj.Symbol, phase);
                    }
                }
            }
            private void Update_ApplicationTheme(global::PiStudio.Win10.Data.Theme obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ApplicationTheme(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ApplicationTheme_Foreground(obj.Foreground, phase);
                    }
                }
            }
            private void Update_ApplicationTheme_Foreground(global::Windows.UI.Color obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Foreground(this.obj8, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj9, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                }
            }
            private void Update_Text(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj8, obj, null);
                }
            }
            private void Update_Symbol(global::Windows.UI.Xaml.Controls.Symbol obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_SymbolIcon_Symbol(this.obj9, obj);
                }
            }

            private class PiBar_obj7_BindingsTracking
            {
                global::System.WeakReference<PiBar_obj7_Bindings> WeakRefToBindingObj; 

                public PiBar_obj7_BindingsTracking(PiBar_obj7_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<PiBar_obj7_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_ApplicationTheme(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    PiBar_obj7_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::PiStudio.Win10.Data.SearchOption obj = sender as global::PiStudio.Win10.Data.SearchOption;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_ApplicationTheme(obj.ApplicationTheme, DATA_CHANGED);
                                    bindings.Update_Symbol(obj.Symbol, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "ApplicationTheme":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ApplicationTheme(obj.ApplicationTheme, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Symbol":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Symbol(obj.Symbol, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::PiStudio.Win10.Data.SearchOption obj)
                {
                    PiBar_obj7_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void PropertyChanged_ApplicationTheme(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    PiBar_obj7_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::PiStudio.Win10.Data.Theme obj = sender as global::PiStudio.Win10.Data.Theme;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_ApplicationTheme_Foreground(obj.Foreground, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Foreground":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ApplicationTheme_Foreground(obj.Foreground, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::PiStudio.Win10.Data.Theme cache_ApplicationTheme = null;
                public void UpdateChildListeners_ApplicationTheme(global::PiStudio.Win10.Data.Theme obj)
                {
                    if (obj != cache_ApplicationTheme)
                    {
                        if (cache_ApplicationTheme != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ApplicationTheme).PropertyChanged -= PropertyChanged_ApplicationTheme;
                            cache_ApplicationTheme = null;
                        }
                        if (obj != null)
                        {
                            cache_ApplicationTheme = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ApplicationTheme;
                        }
                    }
                }
            }
        }

        private class PiBar_obj10_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IPiBar_Bindings
        {
            private global::PiStudio.Win10.Data.SearchOption dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj11;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj12;

            private PiBar_obj10_BindingsTracking bindingsTracking;

            public PiBar_obj10_Bindings()
            {
                this.bindingsTracking = new PiBar_obj10_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 11:
                        this.obj11 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 12:
                        this.obj12 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::PiStudio.Win10.Data.SearchOption data = args.NewValue as global::PiStudio.Win10.Data.SearchOption;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::PiStudio.Win10.Data.SearchOption was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::PiStudio.Win10.Data.SearchOption);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.Grid)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::PiStudio.Win10.Data.SearchOption) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IPiBar_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // PiBar_obj10_Bindings

            public void SetDataRoot(global::PiStudio.Win10.Data.SearchOption newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::PiStudio.Win10.Data.SearchOption obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Text(obj.Text, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Symbol(obj.Symbol, phase);
                    }
                }
            }
            private void Update_Text(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj11, obj, null);
                }
            }
            private void Update_Symbol(global::Windows.UI.Xaml.Controls.Symbol obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_SymbolIcon_Symbol(this.obj12, obj);
                }
            }

            private class PiBar_obj10_BindingsTracking
            {
                global::System.WeakReference<PiBar_obj10_Bindings> WeakRefToBindingObj; 

                public PiBar_obj10_BindingsTracking(PiBar_obj10_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<PiBar_obj10_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    PiBar_obj10_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::PiStudio.Win10.Data.SearchOption obj = sender as global::PiStudio.Win10.Data.SearchOption;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_Symbol(obj.Symbol, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Symbol":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Symbol(obj.Symbol, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::PiStudio.Win10.Data.SearchOption obj)
                {
                    PiBar_obj10_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        private class PiBar_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IPiBar_Bindings
        {
            private global::PiStudio.Win10.UI.Controls.PiBar dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.StackPanel obj2;
            private global::Windows.UI.Xaml.Controls.Button obj3;
            private global::Windows.UI.Xaml.Controls.AutoSuggestBox obj4;
            private global::Windows.UI.Xaml.Controls.ListView obj6;

            private PiBar_obj1_BindingsTracking bindingsTracking;

            public PiBar_obj1_Bindings()
            {
                this.bindingsTracking = new PiBar_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2:
                        this.obj2 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        break;
                    case 3:
                        this.obj3 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 4:
                        this.obj4 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)target;
                        break;
                    case 6:
                        this.obj6 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    default:
                        break;
                }
            }

            // IPiBar_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // PiBar_obj1_Bindings

            public void SetDataRoot(global::PiStudio.Win10.UI.Controls.PiBar newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::PiStudio.Win10.UI.Controls.PiBar obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ApplicationTheme(obj.ApplicationTheme, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Height(obj.Height, phase);
                        this.Update_Width(obj.Width, phase);
                        this.Update_PlaceholderText(obj.PlaceholderText, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ItemsSource(obj.ItemsSource, phase);
                    }
                }
            }
            private void Update_ApplicationTheme(global::PiStudio.Win10.Data.Theme obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ApplicationTheme(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ApplicationTheme_UpperPanelBackground(obj.UpperPanelBackground, phase);
                        this.Update_ApplicationTheme_Foreground(obj.Foreground, phase);
                        this.Update_ApplicationTheme_Background(obj.Background, phase);
                        this.Update_ApplicationTheme_PanelForeground(obj.PanelForeground, phase);
                        this.Update_ApplicationTheme_PanelItemFocused(obj.PanelItemFocused, phase);
                    }
                }
            }
            private void Update_ApplicationTheme_UpperPanelBackground(global::Windows.UI.Color obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Panel_Background(this.obj2, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Background(this.obj6, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                }
            }
            private void Update_Height(global::System.Double obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Height(this.obj2, obj);
                }
            }
            private void Update_Width(global::System.Double obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Width(this.obj2, obj);
                }
            }
            private void Update_ApplicationTheme_Foreground(global::Windows.UI.Color obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Foreground(this.obj3, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                }
            }
            private void Update_ApplicationTheme_Background(global::Windows.UI.Color obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Background(this.obj4, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                }
            }
            private void Update_ApplicationTheme_PanelForeground(global::Windows.UI.Color obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Foreground(this.obj4, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Foreground(this.obj6, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                }
            }
            private void Update_PlaceholderText(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_AutoSuggestBox_PlaceholderText(this.obj4, obj, null);
                }
            }
            private void Update_ApplicationTheme_PanelItemFocused(global::Windows.UI.Color obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_BorderBrush(this.obj4, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                }
            }
            private void Update_ItemsSource(global::System.Object obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj4, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj6, obj, null);
                }
            }

            private class PiBar_obj1_BindingsTracking
            {
                global::System.WeakReference<PiBar_obj1_Bindings> WeakRefToBindingObj; 

                public PiBar_obj1_BindingsTracking(PiBar_obj1_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<PiBar_obj1_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_ApplicationTheme(null);
                }

                public void DependencyPropertyChanged_Height(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    PiBar_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::PiStudio.Win10.UI.Controls.PiBar obj = sender as global::PiStudio.Win10.UI.Controls.PiBar;
        if (obj != null)
        {
            bindings.Update_Height(obj.Height, DATA_CHANGED);
        }
                    }
                }
                public void DependencyPropertyChanged_Width(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    PiBar_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::PiStudio.Win10.UI.Controls.PiBar obj = sender as global::PiStudio.Win10.UI.Controls.PiBar;
        if (obj != null)
        {
            bindings.Update_Width(obj.Width, DATA_CHANGED);
        }
                    }
                }
                public void DependencyPropertyChanged_PlaceholderText(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    PiBar_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::PiStudio.Win10.UI.Controls.PiBar obj = sender as global::PiStudio.Win10.UI.Controls.PiBar;
        if (obj != null)
        {
            bindings.Update_PlaceholderText(obj.PlaceholderText, DATA_CHANGED);
        }
                    }
                }
                public void DependencyPropertyChanged_ItemsSource(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    PiBar_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::PiStudio.Win10.UI.Controls.PiBar obj = sender as global::PiStudio.Win10.UI.Controls.PiBar;
        if (obj != null)
        {
            bindings.Update_ItemsSource(obj.ItemsSource, DATA_CHANGED);
        }
                    }
                }
                private long tokenDPC_ItemsSource = 0;
                public void UpdateChildListeners_(global::PiStudio.Win10.UI.Controls.PiBar obj)
                {
                    PiBar_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::PiStudio.Win10.UI.Controls.PiBar.ItemsSourceProperty, tokenDPC_ItemsSource);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_ItemsSource = obj.RegisterPropertyChangedCallback(global::PiStudio.Win10.UI.Controls.PiBar.ItemsSourceProperty, DependencyPropertyChanged_ItemsSource);
                        }
                    }
                }
                public void PropertyChanged_ApplicationTheme(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    PiBar_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::PiStudio.Win10.Data.Theme obj = sender as global::PiStudio.Win10.Data.Theme;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_ApplicationTheme_UpperPanelBackground(obj.UpperPanelBackground, DATA_CHANGED);
                                    bindings.Update_ApplicationTheme_Foreground(obj.Foreground, DATA_CHANGED);
                                    bindings.Update_ApplicationTheme_Background(obj.Background, DATA_CHANGED);
                                    bindings.Update_ApplicationTheme_PanelForeground(obj.PanelForeground, DATA_CHANGED);
                                    bindings.Update_ApplicationTheme_PanelItemFocused(obj.PanelItemFocused, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "UpperPanelBackground":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ApplicationTheme_UpperPanelBackground(obj.UpperPanelBackground, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Foreground":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ApplicationTheme_Foreground(obj.Foreground, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Background":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ApplicationTheme_Background(obj.Background, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PanelForeground":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ApplicationTheme_PanelForeground(obj.PanelForeground, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PanelItemFocused":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ApplicationTheme_PanelItemFocused(obj.PanelItemFocused, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::PiStudio.Win10.Data.Theme cache_ApplicationTheme = null;
                public void UpdateChildListeners_ApplicationTheme(global::PiStudio.Win10.Data.Theme obj)
                {
                    if (obj != cache_ApplicationTheme)
                    {
                        if (cache_ApplicationTheme != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ApplicationTheme).PropertyChanged -= PropertyChanged_ApplicationTheme;
                            cache_ApplicationTheme = null;
                        }
                        if (obj != null)
                        {
                            cache_ApplicationTheme = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ApplicationTheme;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 3:
                {
                    this.ShowOptions = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 18 "..\..\..\..\UI\Controls\PiBar.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.ShowOptions).Click += this.ShowOptions_Click;
                    #line default
                }
                break;
            case 4:
                {
                    this.SuggestBoxPresenter = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    #line 26 "..\..\..\..\UI\Controls\PiBar.xaml"
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)this.SuggestBoxPresenter).SuggestionChosen += this.SuggestBoxPresenter_SuggestionChosen;
                    #line 26 "..\..\..\..\UI\Controls\PiBar.xaml"
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)this.SuggestBoxPresenter).TextChanged += this.SuggestBoxPresenter_TextChanged;
                    #line 27 "..\..\..\..\UI\Controls\PiBar.xaml"
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)this.SuggestBoxPresenter).QuerySubmitted += this.SuggestBoxPresenter_QuerySubmitted;
                    #line default
                }
                break;
            case 5:
                {
                    this.SpeakOptions = (global::Windows.UI.Xaml.Controls.Primitives.Popup)(target);
                }
                break;
            case 6:
                {
                    this.ListBoxPresenter = (global::Windows.UI.Xaml.Controls.ListView)(target);
                    #line 51 "..\..\..\..\UI\Controls\PiBar.xaml"
                    ((global::Windows.UI.Xaml.Controls.ListView)this.ListBoxPresenter).SelectionChanged += this.ListBoxPresenter_SelectionChanged;
                    #line default
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    PiBar_obj1_Bindings bindings = new PiBar_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            case 7:
                {
                    global::Windows.UI.Xaml.Controls.Grid element7 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    PiBar_obj7_Bindings bindings = new PiBar_obj7_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::PiStudio.Win10.Data.SearchOption) element7.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element7.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element7, bindings);
                }
                break;
            case 10:
                {
                    global::Windows.UI.Xaml.Controls.Grid element10 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    PiBar_obj10_Bindings bindings = new PiBar_obj10_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::PiStudio.Win10.Data.SearchOption) element10.DataContext);
                    element10.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element10, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

