#pragma checksum "C:\Users\lichm\Source\Repos\PiStudio\PiStudio.Win10\UI\Controls\Toolbox.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "30D7AD7BF591CE53FD82BB940304BC90"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PiStudio.Win10.UI.Controls
{
    partial class Toolbox : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_Panel_Background(global::Windows.UI.Xaml.Controls.Panel obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Background = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Foreground(global::Windows.UI.Xaml.Controls.TextBlock obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Foreground = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_IconElement_Foreground(global::Windows.UI.Xaml.Controls.IconElement obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Foreground = value;
            }
            public static void Set_Windows_UI_Xaml_Shapes_Shape_Stroke(global::Windows.UI.Xaml.Shapes.Shape obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Stroke = value;
            }
            public static void Set_Windows_UI_Xaml_Shapes_Shape_Fill(global::Windows.UI.Xaml.Shapes.Shape obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Fill = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Grid_BorderBrush(global::Windows.UI.Xaml.Controls.Grid obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.BorderBrush = value;
            }
        };

        private class Toolbox_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IToolbox_Bindings
        {
            private global::PiStudio.Win10.UI.Controls.Toolbox dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Grid obj6;
            private global::Windows.UI.Xaml.Controls.Grid obj7;
            private global::Windows.UI.Xaml.Controls.TextBlock obj20;
            private global::Windows.UI.Xaml.Controls.SymbolIcon obj21;
            private global::Windows.UI.Xaml.Controls.TextBlock obj23;
            private global::Windows.UI.Xaml.Shapes.Rectangle obj24;
            private global::Windows.UI.Xaml.Shapes.Polygon obj25;
            private global::Windows.UI.Xaml.Controls.Grid obj27;
            private global::Windows.UI.Xaml.Controls.TextBlock obj28;
            private global::Windows.UI.Xaml.Shapes.Polygon obj29;
            private global::Windows.UI.Xaml.Controls.TextBlock obj35;
            private global::Windows.UI.Xaml.Shapes.Polygon obj36;
            private global::Windows.UI.Xaml.Shapes.Rectangle obj37;
            private global::Windows.UI.Xaml.Shapes.Rectangle obj38;
            private global::Windows.UI.Xaml.Shapes.Rectangle obj39;
            private global::Windows.UI.Xaml.Shapes.Rectangle obj40;

            private Toolbox_obj1_BindingsTracking bindingsTracking;

            public Toolbox_obj1_Bindings()
            {
                this.bindingsTracking = new Toolbox_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 6:
                        this.obj6 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 7:
                        this.obj7 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 20:
                        this.obj20 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 21:
                        this.obj21 = (global::Windows.UI.Xaml.Controls.SymbolIcon)target;
                        break;
                    case 23:
                        this.obj23 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 24:
                        this.obj24 = (global::Windows.UI.Xaml.Shapes.Rectangle)target;
                        break;
                    case 25:
                        this.obj25 = (global::Windows.UI.Xaml.Shapes.Polygon)target;
                        break;
                    case 27:
                        this.obj27 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 28:
                        this.obj28 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 29:
                        this.obj29 = (global::Windows.UI.Xaml.Shapes.Polygon)target;
                        break;
                    case 35:
                        this.obj35 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 36:
                        this.obj36 = (global::Windows.UI.Xaml.Shapes.Polygon)target;
                        break;
                    case 37:
                        this.obj37 = (global::Windows.UI.Xaml.Shapes.Rectangle)target;
                        break;
                    case 38:
                        this.obj38 = (global::Windows.UI.Xaml.Shapes.Rectangle)target;
                        break;
                    case 39:
                        this.obj39 = (global::Windows.UI.Xaml.Shapes.Rectangle)target;
                        break;
                    case 40:
                        this.obj40 = (global::Windows.UI.Xaml.Shapes.Rectangle)target;
                        break;
                    default:
                        break;
                }
            }

            // IToolbox_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // Toolbox_obj1_Bindings

            public void SetDataRoot(global::PiStudio.Win10.UI.Controls.Toolbox newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::PiStudio.Win10.UI.Controls.Toolbox obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ApplicationTheme(obj.ApplicationTheme, phase);
                        this.Update_LanguagePack(obj.LanguagePack, phase);
                    }
                }
            }
            private void Update_ApplicationTheme(global::PiStudio.Win10.Data.Theme obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ApplicationTheme(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ApplicationTheme_PanelBackground(obj.PanelBackground, phase);
                        this.Update_ApplicationTheme_PanelForeground(obj.PanelForeground, phase);
                        this.Update_ApplicationTheme_Foreground(obj.Foreground, phase);
                    }
                }
            }
            private void Update_ApplicationTheme_PanelBackground(global::Windows.UI.Color obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Panel_Background(this.obj6, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Panel_Background(this.obj7, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                }
            }
            private void Update_LanguagePack(global::PiStudio.Shared.Data.LanguagePack obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_LanguagePack(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_LanguagePack_DrawingUndo(obj.DrawingUndo, phase);
                        this.Update_LanguagePack_DrawingClear(obj.DrawingClear, phase);
                        this.Update_LanguagePack_DrawingColor(obj.DrawingColor, phase);
                        this.Update_LanguagePack_DrawingSize(obj.DrawingSize, phase);
                    }
                }
            }
            private void Update_LanguagePack_DrawingUndo(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj20, obj, null);
                }
            }
            private void Update_ApplicationTheme_PanelForeground(global::Windows.UI.Color obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Foreground(this.obj20, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_IconElement_Foreground(this.obj21, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Foreground(this.obj23, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Shapes_Shape_Stroke(this.obj24, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Shapes_Shape_Fill(this.obj25, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Foreground(this.obj28, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Shapes_Shape_Fill(this.obj29, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Foreground(this.obj35, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Shapes_Shape_Fill(this.obj36, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Shapes_Shape_Fill(this.obj37, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Shapes_Shape_Fill(this.obj38, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Shapes_Shape_Fill(this.obj39, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Shapes_Shape_Fill(this.obj40, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                }
            }
            private void Update_LanguagePack_DrawingClear(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj23, obj, null);
                }
            }
            private void Update_ApplicationTheme_Foreground(global::Windows.UI.Color obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Grid_BorderBrush(this.obj27, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                }
            }
            private void Update_LanguagePack_DrawingColor(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj28, obj, null);
                }
            }
            private void Update_LanguagePack_DrawingSize(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj35, obj, null);
                }
            }

            private class Toolbox_obj1_BindingsTracking
            {
                global::System.WeakReference<Toolbox_obj1_Bindings> WeakRefToBindingObj; 

                public Toolbox_obj1_BindingsTracking(Toolbox_obj1_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<Toolbox_obj1_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ApplicationTheme(null);
                    UpdateChildListeners_LanguagePack(null);
                }

                public void PropertyChanged_ApplicationTheme(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    Toolbox_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::PiStudio.Win10.Data.Theme obj = sender as global::PiStudio.Win10.Data.Theme;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_ApplicationTheme_PanelBackground(obj.PanelBackground, DATA_CHANGED);
                                    bindings.Update_ApplicationTheme_PanelForeground(obj.PanelForeground, DATA_CHANGED);
                                    bindings.Update_ApplicationTheme_Foreground(obj.Foreground, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "PanelBackground":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ApplicationTheme_PanelBackground(obj.PanelBackground, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PanelForeground":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ApplicationTheme_PanelForeground(obj.PanelForeground, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Foreground":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ApplicationTheme_Foreground(obj.Foreground, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::PiStudio.Win10.Data.Theme cache_ApplicationTheme = null;
                public void UpdateChildListeners_ApplicationTheme(global::PiStudio.Win10.Data.Theme obj)
                {
                    if (obj != cache_ApplicationTheme)
                    {
                        if (cache_ApplicationTheme != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ApplicationTheme).PropertyChanged -= PropertyChanged_ApplicationTheme;
                            cache_ApplicationTheme = null;
                        }
                        if (obj != null)
                        {
                            cache_ApplicationTheme = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ApplicationTheme;
                        }
                    }
                }
                public void PropertyChanged_LanguagePack(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    Toolbox_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::PiStudio.Shared.Data.LanguagePack obj = sender as global::PiStudio.Shared.Data.LanguagePack;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_LanguagePack_DrawingUndo(obj.DrawingUndo, DATA_CHANGED);
                                    bindings.Update_LanguagePack_DrawingClear(obj.DrawingClear, DATA_CHANGED);
                                    bindings.Update_LanguagePack_DrawingColor(obj.DrawingColor, DATA_CHANGED);
                                    bindings.Update_LanguagePack_DrawingSize(obj.DrawingSize, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "DrawingUndo":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_LanguagePack_DrawingUndo(obj.DrawingUndo, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DrawingClear":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_LanguagePack_DrawingClear(obj.DrawingClear, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DrawingColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_LanguagePack_DrawingColor(obj.DrawingColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DrawingSize":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_LanguagePack_DrawingSize(obj.DrawingSize, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::PiStudio.Shared.Data.LanguagePack cache_LanguagePack = null;
                public void UpdateChildListeners_LanguagePack(global::PiStudio.Shared.Data.LanguagePack obj)
                {
                    if (obj != cache_LanguagePack)
                    {
                        if (cache_LanguagePack != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_LanguagePack).PropertyChanged -= PropertyChanged_LanguagePack;
                            cache_LanguagePack = null;
                        }
                        if (obj != null)
                        {
                            cache_LanguagePack = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_LanguagePack;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2:
                {
                    this.SizePopupAnimation = (global::Windows.UI.Xaml.Media.Animation.Storyboard)(target);
                }
                break;
            case 3:
                {
                    this.ColorPopupAnimation = (global::Windows.UI.Xaml.Media.Animation.Storyboard)(target);
                }
                break;
            case 4:
                {
                    this.MainGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    #line 22 "..\..\..\..\UI\Controls\Toolbox.xaml"
                    ((global::Windows.UI.Xaml.Controls.Grid)this.MainGrid).PointerEntered += this.MainGrid_PointerEntered;
                    #line 22 "..\..\..\..\UI\Controls\Toolbox.xaml"
                    ((global::Windows.UI.Xaml.Controls.Grid)this.MainGrid).PointerExited += this.MainGrid_PointerExited;
                    #line default
                }
                break;
            case 5:
                {
                    this.Shadow = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 6:
                {
                    this.Separator1 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 7:
                {
                    this.Separator2 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 8:
                {
                    this.SizePopup = (global::Windows.UI.Xaml.Controls.Primitives.Popup)(target);
                }
                break;
            case 9:
                {
                    this.ColorPopup = (global::Windows.UI.Xaml.Controls.Primitives.Popup)(target);
                }
                break;
            case 10:
                {
                    this.ColorBorder = (global::Windows.UI.Xaml.Controls.Border)(target);
                    #line 154 "..\..\..\..\UI\Controls\Toolbox.xaml"
                    ((global::Windows.UI.Xaml.Controls.Border)this.ColorBorder).PointerEntered += this.MainGrid_PointerEntered;
                    #line 154 "..\..\..\..\UI\Controls\Toolbox.xaml"
                    ((global::Windows.UI.Xaml.Controls.Border)this.ColorBorder).PointerExited += this.MainGrid_PointerExited;
                    #line default
                }
                break;
            case 11:
                {
                    this.ColorPicker = (global::Coding4Fun.Toolkit.Controls.ColorPicker)(target);
                    #line 156 "..\..\..\..\UI\Controls\Toolbox.xaml"
                    ((global::Coding4Fun.Toolkit.Controls.ColorPicker)this.ColorPicker).ColorChanged += this.ColorPicker_ColorChanged;
                    #line default
                }
                break;
            case 12:
                {
                    this.SizeBorder = (global::Windows.UI.Xaml.Controls.Border)(target);
                    #line 132 "..\..\..\..\UI\Controls\Toolbox.xaml"
                    ((global::Windows.UI.Xaml.Controls.Border)this.SizeBorder).PointerEntered += this.MainGrid_PointerEntered;
                    #line 133 "..\..\..\..\UI\Controls\Toolbox.xaml"
                    ((global::Windows.UI.Xaml.Controls.Border)this.SizeBorder).PointerExited += this.MainGrid_PointerExited;
                    #line default
                }
                break;
            case 13:
                {
                    this.LineSizes = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 14:
                {
                    global::Windows.UI.Xaml.Controls.Button element14 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 135 "..\..\..\..\UI\Controls\Toolbox.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element14).Click += this.Sizes_Click;
                    #line default
                }
                break;
            case 15:
                {
                    global::Windows.UI.Xaml.Controls.Button element15 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 138 "..\..\..\..\UI\Controls\Toolbox.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element15).Click += this.Sizes_Click;
                    #line default
                }
                break;
            case 16:
                {
                    global::Windows.UI.Xaml.Controls.Button element16 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 141 "..\..\..\..\UI\Controls\Toolbox.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element16).Click += this.Sizes_Click;
                    #line default
                }
                break;
            case 17:
                {
                    global::Windows.UI.Xaml.Controls.Button element17 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 144 "..\..\..\..\UI\Controls\Toolbox.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element17).Click += this.Sizes_Click;
                    #line default
                }
                break;
            case 18:
                {
                    global::Windows.UI.Xaml.Controls.Button element18 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 147 "..\..\..\..\UI\Controls\Toolbox.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element18).Click += this.Sizes_Click;
                    #line default
                }
                break;
            case 19:
                {
                    this.UndoButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 113 "..\..\..\..\UI\Controls\Toolbox.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.UndoButton).Click += this.UndoButton_Click;
                    #line default
                }
                break;
            case 22:
                {
                    this.CleanButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 93 "..\..\..\..\UI\Controls\Toolbox.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.CleanButton).Click += this.ClearButton_Click;
                    #line default
                }
                break;
            case 26:
                {
                    this.ColorButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 66 "..\..\..\..\UI\Controls\Toolbox.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.ColorButton).Click += this.ColorButton_Click;
                    #line default
                }
                break;
            case 27:
                {
                    this.ColorPreview = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 30:
                {
                    this.GradientStop1 = (global::Windows.UI.Xaml.Media.GradientStop)(target);
                }
                break;
            case 31:
                {
                    this.GradientStop2 = (global::Windows.UI.Xaml.Media.GradientStop)(target);
                }
                break;
            case 32:
                {
                    this.GradientStop3 = (global::Windows.UI.Xaml.Media.GradientStop)(target);
                }
                break;
            case 33:
                {
                    this.GradientStop4 = (global::Windows.UI.Xaml.Media.GradientStop)(target);
                }
                break;
            case 34:
                {
                    this.SizeButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 34 "..\..\..\..\UI\Controls\Toolbox.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.SizeButton).Click += this.SizeButton_Click;
                    #line default
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    Toolbox_obj1_Bindings bindings = new Toolbox_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

