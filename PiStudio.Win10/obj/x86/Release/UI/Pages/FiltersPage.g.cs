#pragma checksum "C:\Users\Jakub Lichman\Source\Repos\Bachelor-Thesis\PiStudio.Win10\UI\Pages\FiltersPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "10B1F96437F5CBC43F8027774D3A83B4"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PiStudio.Win10.UI.Pages
{
    partial class FiltersPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            public static void Set_PiStudio_Win10_UI_Controls_MenuItem_ApplicationTheme(global::PiStudio.Win10.UI.Controls.MenuItem obj, global::PiStudio.Win10.Data.Theme value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::PiStudio.Win10.Data.Theme) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::PiStudio.Win10.Data.Theme), targetNullValue);
                }
                obj.ApplicationTheme = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Panel_Background(global::Windows.UI.Xaml.Controls.Panel obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Background = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_Foreground(global::Windows.UI.Xaml.Controls.Control obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Foreground = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_Background(global::Windows.UI.Xaml.Controls.Control obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Background = value;
            }
        };

        private class FiltersPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IFiltersPage_Bindings
        {
            private global::PiStudio.Win10.UI.Pages.FiltersPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Grid obj2;
            private global::Windows.UI.Xaml.Controls.Grid obj4;
            private global::Windows.UI.Xaml.Controls.Button obj5;
            private global::PiStudio.Win10.UI.Controls.MenuItem obj6;
            private global::PiStudio.Win10.UI.Controls.MenuItem obj7;
            private global::PiStudio.Win10.UI.Controls.MenuItem obj8;
            private global::PiStudio.Win10.UI.Controls.MenuItem obj9;
            private global::PiStudio.Win10.UI.Controls.MenuItem obj10;
            private global::PiStudio.Win10.UI.Controls.MenuItem obj11;
            private global::PiStudio.Win10.UI.Controls.MenuItem obj12;

            private FiltersPage_obj1_BindingsTracking bindingsTracking;

            public FiltersPage_obj1_Bindings()
            {
                this.bindingsTracking = new FiltersPage_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2:
                        this.obj2 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 4:
                        this.obj4 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 5:
                        this.obj5 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 6:
                        this.obj6 = (global::PiStudio.Win10.UI.Controls.MenuItem)target;
                        break;
                    case 7:
                        this.obj7 = (global::PiStudio.Win10.UI.Controls.MenuItem)target;
                        break;
                    case 8:
                        this.obj8 = (global::PiStudio.Win10.UI.Controls.MenuItem)target;
                        break;
                    case 9:
                        this.obj9 = (global::PiStudio.Win10.UI.Controls.MenuItem)target;
                        break;
                    case 10:
                        this.obj10 = (global::PiStudio.Win10.UI.Controls.MenuItem)target;
                        break;
                    case 11:
                        this.obj11 = (global::PiStudio.Win10.UI.Controls.MenuItem)target;
                        break;
                    case 12:
                        this.obj12 = (global::PiStudio.Win10.UI.Controls.MenuItem)target;
                        break;
                    default:
                        break;
                }
            }

            // IFiltersPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // FiltersPage_obj1_Bindings

            public void SetDataRoot(global::PiStudio.Win10.UI.Pages.FiltersPage newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::PiStudio.Win10.UI.Pages.FiltersPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ApplicationTheme(obj.ApplicationTheme, phase);
                    }
                }
            }
            private void Update_ApplicationTheme(global::PiStudio.Win10.Data.Theme obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ApplicationTheme(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ApplicationTheme_Background(obj.Background, phase);
                        this.Update_ApplicationTheme_PanelBackground(obj.PanelBackground, phase);
                        this.Update_ApplicationTheme_PanelForeground(obj.PanelForeground, phase);
                        this.Update_ApplicationTheme_PanelItemFocused(obj.PanelItemFocused, phase);
                    }
                }
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_PiStudio_Win10_UI_Controls_MenuItem_ApplicationTheme(this.obj6, obj, null);
                    XamlBindingSetters.Set_PiStudio_Win10_UI_Controls_MenuItem_ApplicationTheme(this.obj7, obj, null);
                    XamlBindingSetters.Set_PiStudio_Win10_UI_Controls_MenuItem_ApplicationTheme(this.obj8, obj, null);
                    XamlBindingSetters.Set_PiStudio_Win10_UI_Controls_MenuItem_ApplicationTheme(this.obj9, obj, null);
                    XamlBindingSetters.Set_PiStudio_Win10_UI_Controls_MenuItem_ApplicationTheme(this.obj10, obj, null);
                    XamlBindingSetters.Set_PiStudio_Win10_UI_Controls_MenuItem_ApplicationTheme(this.obj11, obj, null);
                    XamlBindingSetters.Set_PiStudio_Win10_UI_Controls_MenuItem_ApplicationTheme(this.obj12, obj, null);
                }
            }
            private void Update_ApplicationTheme_Background(global::Windows.UI.Color obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Panel_Background(this.obj2, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                }
            }
            private void Update_ApplicationTheme_PanelBackground(global::Windows.UI.Color obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Panel_Background(this.obj4, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                }
            }
            private void Update_ApplicationTheme_PanelForeground(global::Windows.UI.Color obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Foreground(this.obj5, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                }
            }
            private void Update_ApplicationTheme_PanelItemFocused(global::Windows.UI.Color obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Background(this.obj5, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                }
            }

            private class FiltersPage_obj1_BindingsTracking
            {
                global::System.WeakReference<FiltersPage_obj1_Bindings> WeakRefToBindingObj; 

                public FiltersPage_obj1_BindingsTracking(FiltersPage_obj1_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<FiltersPage_obj1_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ApplicationTheme(null);
                }

                public void PropertyChanged_ApplicationTheme(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    FiltersPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::PiStudio.Win10.Data.Theme obj = sender as global::PiStudio.Win10.Data.Theme;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_ApplicationTheme_Background(obj.Background, DATA_CHANGED);
                                    bindings.Update_ApplicationTheme_PanelBackground(obj.PanelBackground, DATA_CHANGED);
                                    bindings.Update_ApplicationTheme_PanelForeground(obj.PanelForeground, DATA_CHANGED);
                                    bindings.Update_ApplicationTheme_PanelItemFocused(obj.PanelItemFocused, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Background":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ApplicationTheme_Background(obj.Background, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PanelBackground":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ApplicationTheme_PanelBackground(obj.PanelBackground, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PanelForeground":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ApplicationTheme_PanelForeground(obj.PanelForeground, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PanelItemFocused":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ApplicationTheme_PanelItemFocused(obj.PanelItemFocused, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::PiStudio.Win10.Data.Theme cache_ApplicationTheme = null;
                public void UpdateChildListeners_ApplicationTheme(global::PiStudio.Win10.Data.Theme obj)
                {
                    if (obj != cache_ApplicationTheme)
                    {
                        if (cache_ApplicationTheme != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ApplicationTheme).PropertyChanged -= PropertyChanged_ApplicationTheme;
                            cache_ApplicationTheme = null;
                        }
                        if (obj != null)
                        {
                            cache_ApplicationTheme = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ApplicationTheme;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 3:
                {
                    this.MainMenu = (global::Windows.UI.Xaml.Controls.SplitView)(target);
                }
                break;
            case 4:
                {
                    this.ItemsWrapper = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 5:
                {
                    this.HamburgerButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 17 "..\..\..\..\UI\Pages\FiltersPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.HamburgerButton).Click += this.Hamburger_Click;
                    #line default
                }
                break;
            case 6:
                {
                    this.HomeItem = (global::PiStudio.Win10.UI.Controls.MenuItem)(target);
                    #line 20 "..\..\..\..\UI\Pages\FiltersPage.xaml"
                    ((global::PiStudio.Win10.UI.Controls.MenuItem)this.HomeItem).Click += this.MenuItem_Click;
                    #line default
                }
                break;
            case 7:
                {
                    this.FilterItem = (global::PiStudio.Win10.UI.Controls.MenuItem)(target);
                    #line 22 "..\..\..\..\UI\Pages\FiltersPage.xaml"
                    ((global::PiStudio.Win10.UI.Controls.MenuItem)this.FilterItem).Click += this.MenuItem_Click;
                    #line default
                }
                break;
            case 8:
                {
                    this.BrightnessItem = (global::PiStudio.Win10.UI.Controls.MenuItem)(target);
                    #line 24 "..\..\..\..\UI\Pages\FiltersPage.xaml"
                    ((global::PiStudio.Win10.UI.Controls.MenuItem)this.BrightnessItem).Click += this.MenuItem_Click;
                    #line default
                }
                break;
            case 9:
                {
                    this.DrawItem = (global::PiStudio.Win10.UI.Controls.MenuItem)(target);
                    #line 26 "..\..\..\..\UI\Pages\FiltersPage.xaml"
                    ((global::PiStudio.Win10.UI.Controls.MenuItem)this.DrawItem).Click += this.MenuItem_Click;
                    #line default
                }
                break;
            case 10:
                {
                    this.SaveItem = (global::PiStudio.Win10.UI.Controls.MenuItem)(target);
                    #line 28 "..\..\..\..\UI\Pages\FiltersPage.xaml"
                    ((global::PiStudio.Win10.UI.Controls.MenuItem)this.SaveItem).Click += this.MenuItem_Click;
                    #line default
                }
                break;
            case 11:
                {
                    this.SpeakItem = (global::PiStudio.Win10.UI.Controls.MenuItem)(target);
                    #line 30 "..\..\..\..\UI\Pages\FiltersPage.xaml"
                    ((global::PiStudio.Win10.UI.Controls.MenuItem)this.SpeakItem).Click += this.MenuItem_Click;
                    #line default
                }
                break;
            case 12:
                {
                    this.SettingsItem = (global::PiStudio.Win10.UI.Controls.MenuItem)(target);
                    #line 34 "..\..\..\..\UI\Pages\FiltersPage.xaml"
                    ((global::PiStudio.Win10.UI.Controls.MenuItem)this.SettingsItem).Click += this.MenuItem_Click;
                    #line default
                }
                break;
            case 13:
                {
                    this.GridContent = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 14:
                {
                    this.FilterGridView = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 15:
                {
                    this.PRing = (global::Windows.UI.Xaml.Controls.ProgressRing)(target);
                }
                break;
            case 16:
                {
                    this.ImageContent = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    FiltersPage_obj1_Bindings bindings = new FiltersPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

